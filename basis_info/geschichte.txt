1.1 Linux ist Open Source und wird frei zur Verfügung gestellt und es wird von einer Gemeinde ins Netz gestellt.

1.2. Die wichtigsten Wissensfelder sind: 
- Open Source Philosophie
- Ausschüttungen
- Embedded System

Es wird bei Android, Debian und CentOS verwendet.

Die wichtigsten Wissensfelder sind: Windows, Mac und Linux unterschiede und Verteilung Lebenszyklus-Management

GUI gegen Kommandoziele und Desktop Konfiguration verwendet.
Wartungszyklen, Beta und stabil

1.3 Die Definition von Linux : Es wird gemeint das es der Kernel von einem System ist, welches der Zentrale Controller ist, was auf einem Rechner passiert.

Unix war ein Operationssystem erstellt von AT&T Bell Labs in den 70er Jahren.

UNIX ist nun sowohl eine Marke und eine Spezifikation, die von einem Industriekonsortium im Besitz namens Open Group ist. 

Nur Software, die von der Open Group zertifiziert wurde, kann sich UNIX rufen. Trotz der Annahme alle Anforderungen der UNIX-Spezifikation, hat Linux nicht zertifiziert, so dass Linux ist wirklich nicht UNIX! Es ist nur ... UNIX-like.

1.3.1 Rolle des Kernels
Der Kernel des Betriebssystems ist wie ein Fluglotse auf einem Flughafen. Der Kernel schreibt, welches Programm erhält, welche Teile des Speichers, es beginnt und tötet Programme, und es verarbeitet die Anzeige von Text auf einem Monitor. Wenn eine Anwendung auf die Festplatte geschrieben werden muss, müssen Sie das Betriebssystem fragen ob es möglich ist. Wenn zwei Anwendungen eine Anfrage für die gleiche Ressource stattfindet entscheidet der Kernel welches er nimmt, die er erhält, und in einigen Fällen, tötet er eine der Anwendungen, um den Rest des Systems zu speichern.

Der Kernel behandelt auch Schaltungen von Anwendungen. Ein Computer wird eine kleine Anzahl von CPUs haben und eine begrenzte Speichermenge. Der Kernel kümmert Entladen einer Aufgabe und dem Laden einer neuen Aufgabe, wenn es mehr Aufgaben als CPUs gibt. Wenn die aktuelle Task eine ausreichende Zeitdauer ausgeführt wird, unterbricht die CPU die Aufgabe, so dass eine andere ausgeführt werden kann. Dies wird als vorbeugende Multitasking bezeichnet. Multitasking bedeutet, dass der Computer mehrere Aufgaben auf einmal zu tun hat, und Präventiv bedeutet, dass der Kernel die Entscheidung hat, wann der Fokus zwischen Aufgaben wechselt. Mit den Aufgaben schnell schaltende Bewegungen, scheint es, dass der Computer auf einmal viele Dinge zu tun hat.

Jede Anwendung denkt, dass es einen großen Block des Speichers auf dem System zur Verfügung hat, aber es ist der Kernel, der diese Illusion vorbehält, Remapping kleinere Speicherblöcke, teilt Speicherblöcke mit anderen Anwendungen oder sogar Auslagern Blöcke, die nicht berührt worden ist auf Festplatte.

Wenn der Computer startet lädt er ein kleines Stück von einem Code, Bootloader genannt. Aufgabe des Bootloaders ist es, den Kernel zu laden und zu starten. Wenn Sie besser vertraut sind mit den Betriebssystemen wie Microsoft Windows oder Apple OS X, werden Sie wahrscheinlich nie den Bootloader sehen, aber in der UNIX-Welt ist es in der Regel sichtbar, so dass Sie die Art und Weise Ihren Computer startet zwicken.

Der Bootloader lädt den Linux-Kernel, und dann die Steuerung. Linux fährt dann mit der Ausführung der Programme durch die notwendig für den Computer sind, wie eine Verbindung zum Netzwerk oder Starten eines Web-Server.

1.3.2 Anwendungen

Wie ein Fluglotse, ist der Kernel nicht sinnvoll, ohne etwas zu steuern. Wenn der Kernel der Turm ist, sind die Anwendungen die Flugzeuge. Anwendungen stellen Anforderungen an den Kernel und empfangen Ressourcen wie Speicher, CPU und Festplatte, im Gegenzug. Der Kernel abstrahiert auch die komplizierten Details weg von der Anwendung.

Die Anwendung muss nicht wissen, ob ein Block von Festplatte auf einem Solid State Drive von Hersteller A, einer Spinn Metall-Festplatte von Hersteller B, oder sogar eine Netzwerkdateifreigabe kommt. Anwendungen folgen Sie einfach der Kernel-Application Programming Interface (API) und im Gegenzug keine Sorgen zu haben, um über die Details der Implementierung zu kümmern.

Wenn wir, als Benutzer,an Anwendungen denken, neigen wir dazu, von Textverarbeitungsprogrammen, Web-Browser und E-Mail-Clients zu denken. Dem Kernel ist es egal, wenn etwas dem Benutzer zugewandt ist, ein Netzdienst das mit einem Remotecomputer kommuniziert oder mit einem internen Task spricht.

Von diesem erhalten wir eine Abstraktion namens Prozess. Ein Verfahren ist nur eine Aufgabe, die eingelegt ist und durch den Kernel verfolgt. Eine Anwendung kann sogar mit mehreren Prozessen funktionieren, so dass der Kernel sich um den Betrieb der Prozesse kümmert, das Starten und Stoppen ist gewünscht, und Austeilen von Systemressourcen.

1.3.3 Rolle von Open Source

Linux begann 1991 als Hobbyprojekt von Linus Torvalds. Er machte die Quelle frei verfügbar und andere schlossen sich an, um diesen jungen Betriebssystem zu gestalten.Es war nicht das erste System, das von einer Gruppe entwickelt wurde, aber da es sich um ein integriertes Grund Projekt von Early Adopters Fähigkeit hatte, die Richtung des Projekts zu beeinflussen und um sicherzustellen, dass Fehler von anderen UNIX-Varianten nicht wiederholt wurden.

Software-Projekte in Form von Quellcode, der einen Menschen lesbaren Satz von Computeranweisungen ist. Der Quellcode kann in jeder der Hunderte von verschiedenen Sprachen verfasst werden, Linux wurde in C geschrieben, was eine Sprache, die Geschichte teilt mit der ursprünglichen UNIX ist.

Der Quellcode nicht direkt durch den Computer verstanden werden, so müssen die Maschinenbefehle von einem Compiler kompiliert werden. Der Compiler sammelt alle Quelldateien und erzeugt etwas, das auf dem Computer ausgeführt werden kann, wie zum Beispiel Linux-Kernels.

Historisch gesehen wurden die meisten Software unter einer Closed-Source-Lizenz erteilt, was bedeutet, dass Sie das Recht haben, den Maschinencode zu verwenden, aber den Quellcode nicht. Oft wird gesagt, sagt die Lizenz, dass Sie nicht versuchen, Reverse Engineering der Maschinen-Code zurück zugeben, um den Quellcode, um herauszufinden, was es tut!

Open-Source-nimmt eine Quelle zentrierte Sicht der Software. Die Open-Source-Philosophie ist, dass Sie ein Recht haben, die Software zu erhalten, und ihn für den eigenen Gebrauch zu modifizieren. Linux verabschiedet diese Philosophie zu großem Erfolg. Menschen nahmen die Quelle an, nahen Änderungen vor, und teilten sie mit dem Rest der Gruppe zurück.

Daneben war das GNU-Projekt (GNU ist nicht Unix). GNU baute ein eigenes Betriebssystem, waren sie sehr viel effektiver an den Bau der Werkzeuge, die entlang gehen mit einem UNIX-Betriebssystem, wie zum Beispiel die Compiler und die Benutzerschnittstellen. Die Quelle war frei verfügbar, so dass Linux ihre Werkzeuge gezielt einsetzen konnte und bieten ein komplettes System. Die meisten Tools, die Teil des Linux-Systems sind kommen aus den GNU-Tools.

Es gibt viele verschiedene Varianten auf Open Source, und diese werden in einem späteren Kapitel untersucht. Alle stimmen darin überein, dass Sie Zugriff auf den Quellcode haben oder in einigen Fällen müssen, verteilen Veränderungen unterscheiden werden.

1.3.4 Linux Ausschüttungen

Red Hat
Scientific Linux
OPEN SUSE
Debian
Ubuntu
Linux Mint

1.3.4.1

Was ist eine Kommandoeingabe?

Die einfachste Antwort auf die Frage: "Was ist ein Befehl?", Das ist ein Befehl ist ein Software-Programm, dass, wenn in der Befehlszeile ausgeführt wird, eine Aktion auf dem Computer durchführt.

Wenn Sie einen Befehl sollten Sie diese Definition benutzen, sind Sie wirklich zu überlegen, was passiert, wenn Sie einen Befehl ausführen. Wenn Sie in einen Befehl eingeben, wird ein Prozess durch das Betriebssystem, die Eingabe zu lesen können, Daten zu manipulieren und erzeugen Ausgangs laufen. Aus dieser Perspektive führt ein Befehl zu ein Verfahren nach dem Betriebssystem, die dann den Computer veranlasst, eine Aufgabe zu erledigen.

Allerdings gibt es eine andere Art der Betrachtung, was ein Befehl ist: Blick auf seine Quelle. Die Quelle ist, wo der Befehl "herkommt" und es gibt mehrere verschiedene Quellen von Befehlen innerhalb der Hülle Ihrer CLI:

Befehle eingebaut, um die Schale selbst: Ein gutes Beispiel ist der Befehl cd, da es Teil der Bash-Shell. Wenn ein Benutzer den Befehl cd eingibt ist die Bash-Shell bereits ausgeführt und weiß, wie man diesen Befehl zu interpretieren muss und erfordert keine zusätzlichen Programme.

Befehle, die in Dateien, die von der Shell durchsucht werden: Wenn Sie ein ls Befehl eingeben, dann die Schale durchsucht die Verzeichnisse, die in der PATH-Variablen aufgeführt sind, um zu versuchen, eine Datei zu finden, mit dem Namen ls, dass sie ausführen kann. Diese Befehle können auch durch Eingabe des vollständigen Pfades zu dem Befehl ausgeführt werden.

Aliases: Ein Alias ​​kann einen eingebauten Befehl, eine Funktion oder ein Befehl sein, der in einer Datei gefunden wird. Aliase könnten nützlich für die Schaffung neuer Befehle von existierenden Funktionen und Befehle sein.

Funktionen: Funktionen können auch in einem der vorhandenen Befehle, um entweder neue Befehle, überschreiben von Befehlen, um die Shell-Befehle oder in Dateien gespeichert werden. Aliase und Funktionen werden in der Regel von den Initialisierungsdateien, wenn die Schale zuerst beginnt, später in diesem Abschnitt beschrieben geladen.

1.3.5 Hardware Plattformen

Linux begann als etwas, das nur auf einem Computer wie Linus 'laufen würde: eine 386 mit einem bestimmten Festplatten-Controller. Die Palette der Unterstützung wuchs, da die Menschen  Unterstützung für andere Hardware Komponenten bauten. Schließlich begann Linux unterstützung für andere Chips, einschließlich Hardware, die gemacht wurden, um wettbewerbsfähige Betriebssystemen zu haben!

Die Typen von Hardware wuchs von den Demütigen Intel-Chip bis zu Supercomputern. Später kleinerer Größe, Linux unterstützt, Chips wurden entwickelt, um in Consumer-Geräten, die so genannte Embedded-Geräte passten. Die Unterstützung für Linux wurde allgegenwärtig, so dass es oft einfacher war, Hardware zu bauen, um Linux zu unterstützen und verwendten Linux als Sprungbrett für Ihre kundenspezifische Software, als es um die kundenspezifische Hard- und Software von Grund auf neu zu bauen.

Schließlich, Mobiltelefone und Tablets begannen mit Linux zu starten. Eine Firma, die später von Google gekauft wurde, kam auf die Android-Plattform, die ein Bündel von Linux hat und die Software muss auf einem Handy oder Tablet laufen. Dies bedeutet, dass der Aufwand, um ein Telefon auf den Markt zu bekommen wesentlich geringer ist, und die Unternehmen können ihre Zeit besser damit verbringen Innovationen auf dem Benutzer zugewandten Software anzuwenden und nicht das Rad jedes mal neu zu erfinden. Android ist heute einer der Marktführer in diesem Raum.

Abgesehen von Handys und Tablets, kann Linux in vielen Consumer-Geräten gefunden werden. Wireless-Router laufen häufig auf Linux, weil es eine breite Palette von Netzwerk-Funktionen verfügt. Die TiVo ist ein digitaler Videorekorder auf Linux-Basis aufgebaut. Obwohl diese Vorrichtungen Linux im Kern haben, werden die Endbenutzer das nicht wissen. Die kundenspezifische Software interagiert mit dem Benutzer und Linux bietet die stabile Plattform.

1.4 Die Wahl eines Betriebssystemes

Sie haben gelernt, dass Linux ist ein UNIX-ähnliches Betriebssystem ist, was bedeutet, dass es nicht formale Zertifizierung unterzogen werden kann und kann daher nicht mit der offiziellen Handelsmarke UNIX abkommen. Es gibt viele andere Alternativen; einige sind UNIX-ähnliche und einige werden als UNIX zertifiziert. Es gibt auch Nicht-Unix-Betriebssystem wie Microsoft Windows.

Die wichtigste Frage der Fragen ist, bei der Bestimmung der Konfiguration einer Maschine ist ", was diese Maschine zu tun hat?" Wenn Sie spezielle Software ausführen müssen, die nur auf Oracle Solaris läuft ausführen müssen, dann ist das, was Sie brauchen. Wenn Sie in der Lage sind, Microsoft Office-Dokumente lesen und schreiben können, dann müssen sie entweder von Windows oder etwas lauffähig Libreoffice oder Openoffice.

1.4.1 Entscheidungspunkte

Das erste, was Sie entscheiden müssen, ist die Rolle der Maschine. Werden Sie an der Konsole sitzen der Produktivitäts-Anwendungen oder Web-Browsing? Wenn ja, haben Sie einen Desktop. Wird die Maschine als Web-Server verwendet oder auf andere Weise in einem Server-Rack sitzt irgendwo? Du guckst dann auf einen Server.

Server sind in der Regel in einem Rack und eine Tastatur und mit vielen anderen Computern zu überwachen, der Konsolenzugriff wird nur verwendet, um die Einrichtung und Fehlerbehebung des Servers herauszufinden. Der Server wird in nicht-grafischen Modus gefahren, der Ressourcen bis befreit für den eigentlichen Zweck der Computer läuft. Ein Desktop wird in erster Linie als GUI laufen.

Als nächstes bestimmen sie die Funktionen der Maschine. Gibt es spezifische Software muss es ausführen oder bestimmte Funktionen soll er tun? Müssen Sie in der Lage sein, Hunderte oder Tausende dieser Maschinen gleichzeitig zu verwalten? Was ist der Fähigkeiten des Teams die Verwaltung der Computer und Software?

Sie müssen auch bestimmen, die Lebensdauer und die Risikotoleranz des Servers. Betriebssysteme und Software-Upgrades sind in regelmäßigen Abständen, der so genannte Release-Zyklus. Software-Anbieter unterstützen nur ältere Versionen von Software für eine bestimmte Zeit, bevor alle Aktualisierungen, die aufgerufen werden, der Wartungszyklus (oder Lebenszyklus) nicht anbietet. Zum Beispiel große Fedora Linux Releases kommen etwa alle 6 Monate. Versionen werden als End of Life (EOL) nach 2 Hauptversionen zu einem Monat, so dass Sie zwischen 7 und 13 Monate nach der Installation von Fedora, bevor Sie ein Upgrade benötigen. Vergleichen Sie dies mit dem kommerziellen Server-Varianten, Red Hat Enterprise Linux, und Sie können gehen bis 13 Jahre benötigen, bevor ein Upgrade gebraucht wird.

Die Wartung und Release-Zyklen sind wichtig, weil in einer Enterprise Server-Umgebung ist es zeitaufwendig und daher selten, um ein wichtiges Upgrade auf einem Server zu tun. Stattdessen wird der Bediener selbst ersetzt, wenn es erhebliche Verbesserungen oder Alternativen zu der Anwendung gibt, die ein Betriebssystem-Upgrade erforderlich machen. In ähnlicher Weise ist ein langsamer Release-Zyklus wichtig, weil Anwendungen erzielen oft die aktuelle Version des Betriebssystems und Sie sind der Overhead von der Aktualisierung des Servers und der Betriebssysteme ständig vermeiden wollen. Es gibt eine Menge Arbeit in dem Upgrades eines Servers beteiligt sind, und die Serverfunktion hat oft viele Anpassungen vorgenommen, die schwer anzuschließen sind auf einen neuen Server. Dies erfordert viel mehr Tests, als wenn nur die Anwendung aktualisiert wird.

 Wenn sie Softwareentwicklung oder die traditionellen Desktop-Arbeit durchführen wollen sie die letzte Software behalten. Neuere Software bietet Verbesserungen sowohl Funktionalität und Aussehen, die zu mehr Genuss aus der Nutzung des Computers beiträgt. Ein Desktop speichert häufig ihre Arbeit auf einem Remote-Server, so dass der Desktop händelbar ist und dem neueren Betriebssystem aufsetzen, wobei Störungen anfallen können.

Individuelle Software-Versionen können als Beta oder stabiler charakterisiert werden. Eine der großen Sachen über ein Open-Source-Entwickler ist, dass Sie Ihre neueste Software als Lösung anbieten und schnell Feedback von Anwendern zurück bekommen. Wenn ein Software-Version ist in einem Zustand, die viele neue Funktionen beinhaltet, die nicht streng getestet wurde, ist es in der Regel als Beta bezeichnet. Nachdem diese Funktionen getestet wurden, bewegt sich die Software auf einen stabilen Punkt. Wenn Sie die neuesten Funktionen benötigen, dann sind Sie für eine Verteilung, die eine schnelle Release-Zyklus hat und macht es einfacher, Beta-Software nutze zu machen. Auf der Serverseite, möchte man neue stabile Softwarefunktionen finden die auch funktionsfähig sind und getestet wurden.

Eine anderes verwandtes Konzept ist die Abwärtskompatibilität. Dies bezieht sich auf die Fähigkeit, für eine späteres Betriebssystem mit einer Software für frühere Versionen hergestellt kompatibel zu sein. Dieses ist in der Regel ein Problem, wenn Sie Ihr Betriebssystem aktualisieren müssen, sind aber nicht in der Lage, die Anwendungssoftware zu aktualisieren.

Natürlich sind die Kosten immer ein Faktor. Linux selbst könnte frei sein, aber Sie brauchen, um für Unterstützung zu zahlen, je nachdem, welche Optionen Sie wählen. Microsoft hat Server Lizenzkosten und zusätzliche Support-Kosten über die gesamte Lebensdauer des Servers. Ihre ausgewählten Betriebssysteme möglicherweise nur auf eine bestimmte Auswahl an Hardware, die weiter wirkt sich auf die Kosten auslaufen.

1.4.2 Microsoft Windows

Die Microsoft-Welt teilt die Betriebssysteme je nach Zweck der Maschine ein: Desktop oder Server? Die Windows-Desktop-Edition hat verschiedene Namensgebung mit der aktuellen Version (als dies geschrieben wurde) als einfach nur Windows 8. Neue Versionen der Desktopversion kommen alle 3-5 Jahre auf den Markt und werden in der Regel viele Jahre lang unterstützt. Abwärtskompatibilität ist auch eine Priorität für Microsoft, ging sogar so weit, dass der Virtual Maschinen-Technologien zu bündeln, so dass Benutzer ältere Softwareanwendungen benutzen können.

In dem Server-Bereich, gibt es Windows Server, die derzeit (in diesem Schreiben) bei 2012-Version ist, um das Release-Datum zu bezeichnen. Der Server läuft auf GUI, aber größtenteils als Wettbewerbs Reaktion auf Linux, hat erstaunliche Fortschritte in der Befehlszeile scripting Fähigkeiten durch Powershell gefertigt. Sie können auch den Server aussehen wie ein Desktop mit den optionalen Desktop Experience-Paket.

1.4.3 Apple OS X

Apfel macht das OS X-Betriebssystem , das UNIX Zertifizierung durchlaufen hat. OS X wird basiert teilweise von der Software aus dem FreeBSD-Projekt.

Im Moment ist OS X in erster Linie ein Desktop-Betriebssystem, aber es gibt optionale Pakete, die mit dem Management von Netzwerk-Services, die viele OS X Desktop zur Zusammenarbeit zu ermöglichen, wie zum Beispiel helfen, Dateien gemeinsam zu nutzen oder eine Netzwerkanmeldung vereinfacht.

OS X auf dem Desktop ist in der Regel eine persönliche Entscheidung, wie viele das System einfacher zu bedienen finden. Die wachsende Beliebtheit von OS X hat gesunde Unterstützung von Software-Anbieter gewährleistet. OS X ist auch sehr beliebt in der Kreativwirtschaft, wie beispielsweise in der Video-Produktion. Dies ist ein Bereich, wo die Anwendungen betrieben werden für die Betriebssystem-Entscheidung, und damit die Hardware-Wahl, da OS X läuft auf einer Apple-Hardware.

1.4.4 BSD 

Es gibt mehrere Open-Source BSD (Berkeley Software Distribution) Projekte, wie OpenBSD, FreeBSD und NetBSD. Es handelt sich um Alternativen zu Linux in vielerlei Hinsicht, da sie eine große Menge an gemeinsamen Software nutzen. BSDs sind in der Regel in der Serverfunktion implementiert, aber es gibt auch Varianten wie GNOME und KDE, die für Desktop-Rollen entwickelt wurden.Es gibt mehrere Open-Source BSD (Berkeley Software Distribution) Projekte, wie OpenBSD, FreeBSD und NetBSD. Es handelt sich um Alternativen zu Linux in vielerlei Hinsicht, da sie eine große Menge an gemeinsamen Software zu nutzen. BSDs sind in der Regel in der Serverfunktion implementiert, aber es gibt auch Varianten wie GNOME und KDE, die für Desktop-Rollen entwickelt wurden.

1.4.5 Andere kommerzielle UNIXes

kommerzielle sind: 
Oracle Solaris, IBM AIX, HP-UX

Jede dieser läuft auf Hardware von ihrem jeweiligen Schöpfer. Die Hardware ist in der Regel groß und mächtig und bietet Features wie Hot-Swap-CPU und Speicher oder die Integration mit Legacy-Mainframe-Systeme auch vom Verkäufer angeboten.

Es sei denn, die Software erfordert die spezifische Hardware oder die Anforderungen der Anwendung einige der Redundanzen die in der Hardware integriert sind, neigen die meisten Menschen dieser Optionen zu wählen, weil sie ohnehin schon sind Anwender von Produkten der Firma. Zum Beispiel, IBM AIX läuft auf einer Vielzahl von IBM-Hardware und teilt Hardware mit Großrechner. AIX finden Sie in Unternehmen, die bereits einen großen IBM-Fußabdruck oder diese die IBM Software wie WebSphere nutzen.

1.4.6 

1.4.7 Android

Android, Google gesponsert, ist der weltweit beliebteste Linux-Vertrieb. Es ist grundlegend von seinem Ursprung. Linux ist ein Kernel, und viele der Befehle, die in diesem Kurs behandelt werden, sind tatsächlich ein Teil des GNU (GNU ist nicht Unix) Paket. Das ist, warum einige Leute darauf bestehen, den Begriff GNU / Linux allein anstelle von Linux.

Android nutzt die Dalvik Virtual Machine mit Linux und bietet eine robuste Plattform für mobile Geräte wie Handys und Tablets. Allerdings fehlen die traditionellen Pakete, die oft mit Linux verteilt sind (wie GNU und Xorg), ist in der Regel mit Android Desktop-Linux-Vertrieben kompatibel sind.

Diese Inkompatibilität bedeutet, dass ein RedHat oder Ubuntu Benutzer keine Software herunterladen kann aus dem Google Play Store. Ebenso wird ein Terminal-Emulator im Android fehlen viele der Befehle seines Linux Pendants. Es ist jedoch möglich, BusyBox mit Android zu benutzen , um das Arbeit mit Befehlen zu ermöglichen.

Chapter 1 Fertig!

Chapter 2 Anfang:

2.1 Einführung

Open Source Anwendungen und Tools werden wir mit vertraut. Es wird auch über Open-Source-Software und Lizenzen gesprochen.

Amazon, Facebook, Google, Netflix, diese Lizenzen laufen auf Linux

2.2 Wichtigsten Wissensgebiete:

Desktop-Anwendungen
Serveranwendungen
Mobile Anwendungen
EntwicklungsSprachen
Paketverwaltungswerkzeuge und Repositories

folgende Liste von Dateien, Begriffe, Anwendungen:

OpenOffice.org, LibreOffice, Thunderbird, Firefox
Blender, Gimp, Audacity, ImageMagick
Apache, MySQL, PostgreSQL
NFS, Samba, OpenLDAP, Postfix, DNS, DHCP
C, Perl, shell, Python, PHP

Wichtigsten Wissensgebiete:

Lizenzen, Freie Software Fundament (FSF) und Open-Source-Initiative ( OSI)

folgende Liste von Dateien, Begriffe und Anwendungen:

GPL, BSD, Kreative Sachen, Freie Software, Open-Source-Software, FOSS, FLOSS ,
Open Source Geschäftsmodelle

2.3 die Wichtigsten Open-Source Anwendungen

Der Linux-Kernel kann auf einer Vielzahl von Softwaren auf vielen Hardware-Plattformen laufen. Ein Computer kann als Server, das heißt, sie umfassen vor allem Daten über die anderen Namen, oder kann als Desktop, was bedeutet, ein Benutzer wird direkt mit ihm intergriert handeln. Die Maschine kann Software ausführen, oder es kann als Entwicklungsmaschine in den Prozess der Erstellung von Software verwendet werden. Sie können sogar mehrere Rollen verwenden, da es keine Unterscheidung nach der Rolle der Maschine Linux macht; es ist nur eine Frage der Projektierung, die Anwendungen laufen zu lassen.

Ein Vorteil davon ist, dass Sie fast alle Aspekte einer Produktionsumgebung auf abgespeckten Hardware nutzen können, was Kosten und Zeit spart, von der Entwicklung, dem Testen einer Überprüfung. das Lernen von Linux, können Sie die gleichen Server-Anwendungen auf Ihrem Desktop oder kostengünstig virtuellen Server verwenden, der auf einem großen Internet Service Provider betrieben werden kann. Natürlich werden Sie nicht in der Lage sein, um die Lautstärke eines großen Anbieters zu umgehen, da sie sehr viel teurere Hardware haben. Aber Sie können fast jede Konfiguration ohne leistungsfähige Hardware oder Server-Lizenzen simulieren.

Linux-Software fällt in der Regel in eine von drei Kategorien:

Server-Software - 
Software, die keine direkte Interaktion mit dem Monitor und Tastatur an der Maschine auf der es läuft. Sein Zweck ist es,um Informationen zu anderen Computern zu schicken, die so genannten "Clienten" . Manchmal Serversoftware darf nicht auf andere Computer zu sprechen, sondern wird einfach dasitzen und Daten "Crunch".
Desktop-Software - 
ein Web-Browser, Texteditor, Musik-Player oder andere Software, die Sie mit zu interagieren. In vielen Fällen, wie zum Beispiel einen Web-Browser, wird die Software auf einem Server, auf dem anderen Ende spricht und der Interpretation der Daten für Sie. Hier ist die Desktop-Software der "Kunde/Client".
Werkzeuge - 
eine lose Gruppe von Software, die, um es einfacher, um Ihr System zu verwalten. Vielleicht haben Sie ein Werkzeug, das Sie Ihr Display konfigurieren hilft, oder etwas, das eine Linux-Shell bietet oder auch anspruchsvollere Werkzeuge konvertiert einen Sourcecode damit der Computer es ausführen kann.

Darüber hinaus werden wir mobile Anwendungen betrachten, vor allem zum Nutzen der LPI-Prüfung. Eine mobile Anwendung hat die Ähnlichkeit einer DesktopAnwendung, aber es läuft auf einem Telefon oder Tablet stattdessen auf einem Desktop Computer.

Jede Aufgabe, die Sie in Linux zu tun möchten, kann wahrscheinlich durch eine beliebige Anzahl von Anwendungen untergebracht werden. Es gibt viele Web-Browser, viele Web-Server, und viele Texteditoren (der Nutzen der einzelnen sind das Thema von vielen UNIX heiligen Kriegen). Das ist nicht anders als die geschlossene-Source-Welt. Allerdings ist ein Vorteil von Open Source, dass, wenn jemand, der nicht wie die Art und Weise ihrer Web-Server arbeitet, können sie beginnen den Aufbau ihrer eigenen Software. Eine Sache, die Sie lernen können, wie Sie mit Linux Fortschritten ihre eigene Software zu evaluieren. Manchmal werden Sie mit dem Hauptpacket mitgehen, manchmal möchten Sie über den blutigen Rand hinwegsehen.

2.3.1 Desktop Anwendungen





2.3.2
2.3.3
2.3.4
2.4
2.4.1

2.4.2 Mehrere Begriffe für die selbe Sache

Anstatt über die Feinheiten der Open Source vs. Free Software zu stehen, hat die Gemeinde begonnen, alles als freie und Offene Source Software anzubieten(FOSS). Das englische Wort "frei" kann "frei wie beim Essen" bedeuten (wie in keinerlei Kosten) oder "frei wie in der Rede" (wie in der keine Beschränkungen sind).Diese Zweideutigkeit hat auf die Aufnahme des Wortes anhören, um zu dieser Definition beziehung zu führen. Damit wir am Ende mit Freie/ anhören / Offene Source Software (FLOSS).

Während diese Begriffe praktisch sind, sie die Unterschiede zwischen den zwei Denkweisen. Zumindest, wenn Sie FOSS-Software nutzen, wissen Sie, Sie müssen dafür nicht bezahlen und sie können es weiter verbreiten, wie sie möchten.

2.4.3 Andere Lizenzmodelle

FOSS-Lizenzen sind meist auf Software realisiert. Die Menschen haben Arbeiten wie Zeichnungen und Pläne unter FOSS-Lizenzen gestellt, aber das war nicht die Absicht.

Als Software in der Öffentlichkeit platziert wurde, hat der Autor auf alle Rechte verzichtet, einschließlich des Urheberrechts an der Arbeit. In einigen Ländern ist dies die Standard wenn die Arbeit von einer Regierungsbehörde durchgeführt wird. In einigen Ländern wird urheberrechtlich geschütztes Werk gemeinfrei gemacht, nachdem der Autor gestorben ist und eine lange Wartezeit abgelaufen ist.

Die Creative Commons (CC) Organisation hat die Creative Commons-Lizenzen erstellt, die die Absichten hinter FOSS-Lizenzen für nicht Software-Einheiten anzugehen versuchten, erstellt. CC-Lizenzen können auch verwendet werden, um eine kommerzielle Nutzung beschränken, wenn dies der Wunsch des Urhebers war. 

Die CC-Lizenzen sind:

Namensnennung (CC BY) - ähnlich wie die BSD-Lizenz, können Sie CC BY-Gehalt für jeden Einsatz verwenden, sondern müssen den Urheberrechtsinhaber bezahlen

Zuschreibung Aktienvermögen (CC BY-SA) - 
eine Copyleft-Version als Zuschreibungs Lizenz. Abgeleitete Werke müssen unter der gleichen Lizenz geteilt werden, ähnlich wie bei den freien Softwareidealen

Zuschreibung keiner-derivs (CC BY-ND) - 
können Sie den Inhalt unter den gleichen Bedingungen verwenden, wie bei CC-BY, aber sie können es nicht verändern

Zuschreibung keines Handelns (CC BY-NC) - 
genau wie bei CC BY, aber Sie können es nicht für kommerzielle Zwecke benutzen

Zuschreibung -keiner Handelns (CC-BY-NC-SA) - baut auf der CC BY-NC-Lizenz auf, sondern setzt voraus, dass Sie die Änderungen unter der gleichen Lizenz freigeben.

Zuschreibung-NonCommercial-No-derivs (CC-BY-NC-ND) - 
Sie geben den Inhalt für nicht kommerzielle Zwecke aus, aber Menschen können nicht den Inhalt ändern.

Keine Rechte vorbehalten (A0) - Dies ist die kreative Commons-Version von der Öffentlichkeitsdomäne.


Die Lizenzen können vor allem als ShareAlike oder keine Beschränkungen zusammengefasst werden, und ob oder nicht kommerzielle Nutzung oder Ableitungen sind gestattet.

2.4.4 Offene Quelle Geschäftsmodelle



3.1 Einweisung

Das Leben eines System Administrators

Mehr als nur Serverarbeit
- Emails und Dokumentationen scxhreiben

3.2 Linux Grundlagen für Prüfungsziele

ICT Fähigkeiten und Arbeiten mit Linux

Desktop Fähigkeiten, Kommandozeile, industrielles Benutzen und virtualisieren

Wie man Passwörter benutzt, Konsole benutzt usw..

3.3 Graphische Oberfläche gegen keine Graphische Oberfläche

Graphische Oberfläche:

Man hat Menüpunkte, Größe kann verändert werden und man kann sich umherbewegen.

Web Browser, Paint und Email kann verwendet werden.

Die nicht graphisce Oberfläche startet mit einem Text Editor für den Login.

Benutzername und Passwort muss dort eingegeben werden.

Es gibt keine Fenster zum bewegen.
Server laufen auf dieser Ebene ebenfalls.

MOTD = Message of the day

3.4 Kommandozeile

Jeder Linux desktop ist verschieden, man schaut sich um nach " terminal oder e-term"

beides sind graphische Hüllen, unterschiedlich in ihrer Funktionsweise.

Wenn man ein Suchtool benutzt "Ubuntu one", kann man nach Terminal suchen.

Dieses Tool kann damit verwendet werden um schneller auf das Ergebnis zu kommen, nachdem man sucht.

3.5 Virtualisierung und Wolkenrechnen

Linux ist ein Mehruser operationssystem, woran mehrere Benutzer gleichzeitig arbeiten können.

Virtualisierung ist der Prozess, wo ein physikalischer PC, namens "host", mehrere kopien von der Operationssystem zum laufen bringen kann als "gast".

Der Hostprozess heißt " hypervisor" welches die Kontrolle darüber verwaltet.

Linux spielt eine eine Schlüsselrolle in Wolkenarbeiten ( cloud computing).

Die meisten virtuellen Server basieren auf einer Linux kernel und Linux benutzt im Hintergrund, Anwendungen um das ganze zu steuern.

3.6 Linux benutzen für die Arbeit

Die Standardanwendungen sind:

Textverarbeitungssystem
Kalkulationstabellen
Präsentationspakete
Web-Browser

OpenOffice, oder das aktivere LibreOffice, kümmert sich um die ersten drei Rollen.

Textverarbeitungssystem ( word)

Kalkulationstabellen ( Excel)

Präsentationspakete ( PowerPoint)

Libreofficewriter kann texte, graphen, datentabellen uvm. verwalten.

Man kann vieles miteinander verbinden , tabellen und daten z.b.

Libreoffice kann auch mit anderen Formaten arbeiten, wie Microsoft Office oder Adobe Document Format (PDF) Dateien.

Linux ist das beste für den Bürger um Firefox oder Google Chrome Browser zu verwenden.

können Sie erwarten, um die neueste Software für Ihre Plattform und rechtzeitigen Zugang zu Fehlerkorrekturen und neue Funktionen zur Verfügung zu haben. Einige Plugins wie Adobe Flash, kann nicht immer korrekt sein, da die auf ein anderes Unternehmen mit unterschiedlichen Prioritäten setzen.

3.7 Seinen eigenen PC sicher halten

Linux PC sicher halten

sichere Passwörter verwenden auf seiner eigenen Maschine

mindestens 10 Zeichen gemixt mit Zahlen, Zeichen und Symbole

Pakete "KeePassX" um Passwörter zu generieren.

Nachdem kann man unbeschwert Updates laden

Einfach auf installieren klicken danach ist man auf dem aktuellen Stand.

Eine "Firewall" kann verhindern das Netzwerk-Traffic eintrifft und Linux stellt sowas bereit.

Wenn man Ubuntu benutzt "gufw" ist ein graphische Schnittstelle für Ubuntus"unkomplizierte Firewall"

Einfach auf "on" stellen und der ganze Verkehr wird gestoppt, außer es wird iniziert. 
Man kann Dinge erlauben indem man auf das + klickt bzw. anhakt.

Man verwendet "iptables", welche in Firewall System integriert ist.

GUI wird verwendet um effektiven Schutz zu gewährleisten damit die Oberfläche "iptables" schützt.

3.8 Eigenschutz

Wenn man das Internet benutzt hinterlässt man Abdrücke.
Viele diese Informationen gehen verloren, manche werden für Statistiken verwendet.

Auf jeder Seite verschiedene Passwörter benutzen , damit vor Hackangriffen andere Seiten weiterhin geschützt bleiben.

"KeePassX" benutzen.

Cookies tracken dich, egal wohin du surfst.

"Tor Browser" Tor bedeutet "The Onion Router" damit wird man nicht öffentlich bekannt gemacht sondern die Herkunft wird im verborgenen gehalten.

 Der Browser, der mit dem Paket kommt, ist eine abgespeckte Version, die nicht einmal Skripte ausführt, so dass einige Websites möglicherweise nicht richtig laufen können. Allerdings ist es der beste Weg, zu verbergen Ihre Identität, wenn Sie dies wünschen.

 Kapitel 4

 4.3 

 CLI ( Kommmando zeilen Interface) ist ein textbasiertes Interface auf dem PC
 das was der User eingibt in die Shell wird an einem Terminal ausgegeben.
 Bei einer Falscheingabe kommt eine Fehlermeldung.

4.4








